apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: happy-speller
  namespace: demo
  labels:
    app: happy-speller
spec:
  replicas: 2
  selector:
    matchLabels:
      app: happy-speller
  template:
    metadata:
      labels:
        app: happy-speller
    spec:
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      containers:
      - name: happy-speller
        image: node:20-alpine
        command: ["sh", "-c"]
        args:
        - |
          echo "Copying application files..."
          cp -r /app-readonly/* /app/ 2>/dev/null || true
          cd /app
          echo "Installing dependencies..."
          npm install express cors body-parser path fs helmet morgan
          echo "Application ready, starting server..."
          exec node server.js
        ports:
        - containerPort: 8080
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        workingDir: /app
        volumeMounts:
        - name: app-source
          mountPath: /app-readonly
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
      volumes:
      - name: app-source
        configMap:
          name: happy-speller-app
---
apiVersion: v1
kind: Service
metadata:
  name: happy-speller
  namespace: demo
spec:
  selector:
    app: happy-speller
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: happy-speller-lb
  namespace: demo
spec:
  selector:
    app: happy-speller
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
    nodePort: 30080
  type: NodePort