---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-image-updater
  namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-image-updater
rules:
- apiGroups: [""]
  resources: ["secrets", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["argoproj.io"]
  resources: ["applications"]
  verbs: ["get", "list", "watch", "patch"]
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-image-updater
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argocd-image-updater
subjects:
- kind: ServiceAccount
  name: argocd-image-updater
  namespace: argocd
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-image-updater-config
  namespace: argocd
data:
  registries.conf: |
    registries:
    - name: registry.local:5000
      api_url: http://registry.local:5000
      ping: yes
      credentials: secret:argocd/registry-creds#username#password
  ssh_config: |
    Host github.com
        PubkeyAcceptedKeyTypes +ssh-rsa
        HostkeyAlgorithms +ssh-rsa
  git.commit-message-template: |
    build: automatic update of {{ .AppName }}
    
    {{ range .AppChanges -}}
    updates image {{ .Image }} tag '{{ .OldTag }}' to '{{ .NewTag }}'
    {{ end -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-image-updater
  namespace: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-image-updater
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-image-updater
    spec:
      serviceAccountName: argocd-image-updater
      containers:
      - name: argocd-image-updater
        image: quay.io/argoprojlabs/argocd-image-updater:v0.12.2
        imagePullPolicy: Always
        args:
        - run
        - --interval=2m
        - --argocd-server-addr=argocd-server.argocd.svc.cluster.local:443
        - --argocd-insecure=true
        - --log-level=info
        - --kubeconfig=/tmp/config
        env:
        - name: APPLICATIONS_API
          value: argocd
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: ssh-known-hosts
          mountPath: /app/config/ssh
        - name: ssh-config
          mountPath: /app/config/ssh
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: config-volume
        configMap:
          name: argocd-image-updater-config
      - name: ssh-known-hosts
        configMap:
          name: argocd-ssh-known-hosts-cm
      - name: ssh-config
        configMap:
          name: argocd-image-updater-config
          items:
          - key: ssh_config
            path: config
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-image-updater-metrics
  namespace: argocd
spec:
  selector:
    app.kubernetes.io/name: argocd-image-updater
  ports:
  - name: metrics
    port: 8080
    protocol: TCP
    targetPort: 8080